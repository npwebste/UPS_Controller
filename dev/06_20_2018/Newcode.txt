#CSV
import csv


conn = sqlite3.connect(UPS_DB)
c = conn.cursor()
csvdata = c.execute("SELECT * from UPS_DB")

with open('UPS_CSV.csv', 'wb') as csvfile:
	writer = csv.writer(csvfile)
	writer.writewrow(['Column1','Column2','Column3','Column4','Column5','Column6','Column7','Column8','Column9','Column10',])
	writer.writerows(data)

####################################
#USB
/etc/udev/rules.d/11-media-by-label-auto-mount.rules
##
#UDEV
KERNEL=="sd*1", ACTION=="add", RUN=="/home/pi/datalogger/autocopy.sh"

KERNEL!="sd[a-z][0-9]", GOTO="media_by_label_auto_mount_end"  
# Import FS infos  
IMPORT{program}="/sbin/blkid -o udev -p %N"  
# Get a label if present, otherwise specify one  
ENV{ID_FS_LABEL}!="", ENV{dir_name}="%E{ID_FS_LABEL}"  
ENV{ID_FS_LABEL}=="", ENV{dir_name}="usbhd-%k"  
# Global mount options  
ACTION=="add", ENV{mount_options}="relatime"  
# Filesystem-specific mount options  
ACTION=="add", ENV{ID_FS_TYPE}=="vfat|ntfs", ENV{mount_options}="$env{mount_options},utf8,gid=100,umask=002"  
# Mount the device  
ACTION=="add", RUN+="/bin/mkdir -p /media/%E{dir_name}", RUN+="/bin/mount -o $env{mount_options} /dev/%k /media/%E{dir_name}"  
ACTION=="add", RUN=="/home/pi/datalogger/autocopy.sh"
# Clean up after removal  
ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount -l /media/%E{dir_name}", RUN+="/bin/rmdir /media/%E{dir_name}"  
# Exit  
LABEL="media_by_label_auto_mount_end"

udevadm control --reload-rules
##
#Shell Script - autocopy.sh
cd /
cd /home/pi/datalogger
sudo usr/bin/python autocopy.python
unmount
cd /
exit

##
#Python Script
import shutil
import datetime

source = "/home/pi/UPS_CSV.csv"

destination = "/media/pi/USB1/UPS_Export_%s.csv" % datatime.datetime.now().date()

try:
	shutil.copy2(source,destination)
except shutil.Error as e:
	print("Error: %s" % e)
except IOError as e:
	print("Error: %s" % e.strerror)

####################################
#Bootup

# /ect/rc.local
(sleep 10;python3 /home/pi/UPS_Controller/dev/UPS_Main2.py)&

